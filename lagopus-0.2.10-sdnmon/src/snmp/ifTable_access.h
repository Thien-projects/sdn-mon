/*
 * Copyright 2014-2016 Nippon Telegraph and Telephone Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.access_functions.conf 11358 2004-10-14 12:57:34Z dts12 $
 */
#ifndef IFTABLE_ACCESS_H
#define IFTABLE_ACCESS_H

/** User-defined data access functions for data in table ifTable */
/** row level accessors */
Netsnmp_First_Data_Point  ifTable_get_first_data_point;
Netsnmp_Next_Data_Point   ifTable_get_next_data_point;
Netsnmp_Free_Loop_Context ifTable_data_free;
Netsnmp_Free_Data_Context ifTable_loop_free;

int ifTable_commit_row(void **my_data_context, int new_or_del);
void *ifTable_create_data_context(netsnmp_variable_list *index_data,
                                  int column);

/** column accessors */
int32_t *get_ifIndex(void *data_context, size_t *ret_len);
char *get_ifDescr(void *data_context, size_t *ret_len);
int32_t *get_ifType(void *data_context, size_t *ret_len);
int32_t *get_ifMtu(void *data_context, size_t *ret_len);
uint32_t *get_ifSpeed(void *data_context, size_t *ret_len);
char *get_ifPhysAddress(void *data_context, size_t *ret_len);
int32_t *get_ifAdminStatus(void *data_context, size_t *ret_len);
int set_ifAdminStatus(void *data_context, int32_t *val, size_t val_len);
int32_t *get_ifOperStatus(void *data_context, size_t *ret_len);
uint32_t *get_ifLastChange(void *data_context, size_t *ret_len);
uint32_t *get_ifInOctets(void *data_context, size_t *ret_len);
uint32_t *get_ifInUcastPkts(void *data_context, size_t *ret_len);
uint32_t *get_ifInNUcastPkts(void *data_context, size_t *ret_len);
uint32_t *get_ifInDiscards(void *data_context, size_t *ret_len);
uint32_t *get_ifInErrors(void *data_context, size_t *ret_len);
uint32_t *get_ifInUnknownProtos(void *data_context, size_t *ret_len);
uint32_t *get_ifOutOctets(void *data_context, size_t *ret_len);
uint32_t *get_ifOutUcastPkts(void *data_context, size_t *ret_len);
uint32_t *get_ifOutNUcastPkts(void *data_context, size_t *ret_len);
uint32_t *get_ifOutDiscards(void *data_context, size_t *ret_len);
uint32_t *get_ifOutErrors(void *data_context, size_t *ret_len);
uint32_t *get_ifOutQLen(void *data_context, size_t *ret_len);
oid *get_ifSpecific(void *data_context, size_t *ret_len);

#endif /* IFTABLE_ACCESS_H */
